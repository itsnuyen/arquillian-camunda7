<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.camunda.consulting</groupId>
    <artifactId>arquillianSample</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <name>Camunda Platform Process Application</name>
    <description>A Process Application for [Camunda Platform](http://docs.camunda.org). [The project has been generated
        by the Maven archetype 'camunda-archetype-ejb-war-7.21.0']
    </description>

    <properties>
        <!--
        Adjust if you want to use Camunda Enterprise Edition (EE):
        <camunda.version>7.21.0-ee</camunda.version>
        Make sure you also switch to EE repository below
        -->
        <camunda.version>7.22.0-alpha5</camunda.version>
        <wildfly.version>33.0.1.Final</wildfly.version>

        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <arquillian.version>1.9.1.Final</arquillian.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <!-- Needed for ArquillianTest -->
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <!-- process engine, needs to be 'provided' because it's already a shared library in the application server -->
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-external-task-client</artifactId>
        </dependency>
        <dependency>
            <!-- client for Java EE application server integration, included in WAR as an alternative to write your own ProcessApplication class -->
            <groupId>org.camunda.bpm.javaee</groupId>
            <artifactId>camunda-ejb-client-jakarta</artifactId>
        </dependency>

        <dependency>
            <!-- CDI integration, needs to be included in WAR, otherwise CDI can not work correctly -->
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-cdi-jakarta</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.1.0</version>
            <scope>provided</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- Required to use Spin dataformat support -->
        <dependency>
            <groupId>org.camunda.spin</groupId>
            <artifactId>camunda-spin-dataformat-all</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-plugin-spin</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Required to use Templates -->
        <dependency>
            <groupId>org.camunda.template-engines</groupId>
            <artifactId>camunda-template-engines-freemarker</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Java EE APIs -->
        <!-- https://mvnrepository.com/artifact/jakarta.platform/jakarta.jakartaee-api -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>11.0.0-M4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-bpm-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Needed for InMemoryH2Test -->
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.3.232</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.6.0.Final</version>
            <scope>provided</scope>
        </dependency>
        <!-- Used to generate test coverage reports, see https://github.com/camunda-community-hub/camunda-process-test-coverage -->
        <!-- https://mvnrepository.com/artifact/org.camunda.bpm.extension/camunda-bpm-process-test-coverage-junit4 -->
        <dependency>
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-process-test-coverage-junit4</artifactId>
            <version>1.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- AssertJ Testing Library -->
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-bpm-assert</artifactId>
        </dependency>

        <!--        This is only needed for the weld container unit tests-->
        <dependency>
            <!-- AssertJ Testing Library -->
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-assert</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.camunda.community.process_test_coverage/camunda-process-test-coverage-starter-platform-7 -->
        <dependency>
            <groupId>org.camunda.community.process_test_coverage</groupId>
            <artifactId>camunda-process-test-coverage-starter-platform-7</artifactId>
            <version>2.7.0</version>
        </dependency>

        <!-- use logback as logger -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.12</version>
            <scope>test</scope>
        </dependency>

        <!-- apache commons logging => slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.36</version>
            <scope>test</scope>
        </dependency>

        <!-- java util logging => slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.7.36</version>
            <scope>test</scope>
        </dependency>
        <!-- Required by camunda-bpm-assert -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
        <!-- Add your own dependencies here, if in compile scope, they are added to the war -->
        <!-- https://mvnrepository.com/artifact/jakarta.inject/jakarta.inject-api -->
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-spring</artifactId>
            <version>${camunda.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.camunda.bpm.javaee/camunda-ejb-client -->
        <!-- https://mvnrepository.com/artifact/org.jboss.shrinkwrap.resolver/shrinkwrap-resolver-depchain -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <version>3.3.1</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.weld/weld-core-impl -->

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
            <version>1.8.1.Final</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jboss.arquillian.core/arquillian-core-api -->
        <dependency>
            <groupId>org.jboss.arquillian.core</groupId>
            <artifactId>arquillian-core-api</artifactId>
            <version>1.9.1.Final</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>camunda-bpm-nexus</id>
            <name>Camunda Maven Repository</name>
            <url>https://artifacts.camunda.com/artifactory/public/</url>
        </repository>
        <!-- enable this for EE dependencies (requires credentials in ~/.m2/settings.xml)
        <repository>
          <id>camunda-bpm-nexus-ee</id>
          <name>Camunda Enterprise Maven Repository</name>
          <url>https://artifacts.camunda.com/artifactory/camunda-bpm-ee/</url>
        </repository>
        -->
        <repository>
            <id>jboss-public-repository</id>
            <name>JBoss Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!-- Deploy to Wildfly: mvn clean wildfly:deploy See also: https://docs.jboss.org/wildfly/plugins/maven/latest/examples/deployment-example.html -->
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>2.0.2.Final</version>
            </plugin>
            <plugin>
                <!-- Deploy to JBoss AS7: mvn clean jboss-as:deploy See also: https://docs.jboss.org/jbossas/7/plugins/maven/latest/examples/deployment-example.html -->
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>7.9.Final</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- An optional Arquillian testing profile that executes tests in a remote
                WildFly instance -->
            <!-- Run with: mvn clean test -Pwildfly-remote -->
            <id>wildfly-remote</id>
            <dependencies>
                <!-- https://mvnrepository.com/artifact/org.wildfly.arquillian/wildfly-arquillian-container-remote -->
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>5.0.1.Final</version>
                    <scope>test</scope>
                </dependency>
                <!-- To fix 5.0.0.Alpha2 issue:
                https://github.com/wildfly/wildfly-arquillian/discussions/201#discussioncomment-1849214-->
                <dependency>
                    <groupId>org.jboss.remoting</groupId>
                    <artifactId>jboss-remoting</artifactId>
                    <version>5.0.29.Final</version>
                    <scope>test</scope>
                </dependency>
                <!--                <dependency>-->
                <!--                    <groupId>org.jboss.remotingjmx</groupId>-->
                <!--                    <artifactId>remoting-jmx</artifactId>-->
                <!--                    <version>3.0.4.Final</version>-->
                <!--                    <scope>test</scope>-->
                <!--                </dependency>-->
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/wildfly-remote</directory>
                        <includes>
                            <include>*</include>
                        </includes>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly-remote</arquillian.launch>
                                <!--
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager> -->
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>

            <!-- An optional Arquillian testing profile that executes tests in your
                WildFly instance -->
            <!-- This profile will start a new WildFly instance, and execute the test,
                shutting it down when done -->
            <!-- Run with: mvn clean verify -Pwildfly-managed -->
            <id>wildfly-managed</id>
            <properties>
                <serverProfile>standalone.xml</serverProfile>
                <serverRoot>${project.build.directory}/wildfly-${wildfly.version}</serverRoot>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>5.0.1.Final</version>
                    <scope>test</scope>
                </dependency>
                <!-- https://mvnrepository.com/artifact/org.wildfly.arquillian/wildfly-arquillian-protocol-jmx -->
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-protocol-jmx</artifactId>
                    <version>5.0.1.Final</version>
                    <scope>test</scope>
                </dependency>
                <!--                <dependency>-->
                <!--                    <groupId>org.wildfly.arquillian</groupId>-->
                <!--                    <artifactId>wildfly-arquillian-container-bootable</artifactId>-->
                <!--                    <version>5.0.1.Final</version>-->
                <!--                    <scope>test</scope>-->
                <!--                </dependency>-->
            </dependencies>

            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/wildfly-managed</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven-dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>copy-resources-wildfly-modules</id>
                                <!-- here the phase you need -->
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/wildfly-${wildfly.version}/modules
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/wildfly-managed/common/modules</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-resources-wildfly-standalone-file</id>
                                <!-- here the phase you need -->
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/wildfly-${wildfly.version}/standalone/configuration
                                    </outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/test/wildfly-managed/wildfly/standalone/configuration/
                                            </directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <configuration>
                            <environmentVariables>
                                <jboss.home>
                                    ${project.build.directory}/wildfly-${wildfly.version}
                                </jboss.home>
                            </environmentVariables>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly-managed</arquillian.launch>
                                <serverConfig>standalone.xml</serverConfig>
                                <jboss.home.dir>${project.build.directory}/wildfly-${wildfly.version}
                                </jboss.home.dir>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
